import React, { useState, useRef } from "react";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
import { faUpload } from "@fortawesome/free-solid-svg-icons";

/**
 * ArticleCover component renders a form for uploading and previewing a cover image for an article.
 * @param {Object} props - The props object containing properties passed to the component.
 * @param {string} props.coverImage - The current cover image URL.
 * @param {Function} props.setCoverImage - Function to set the cover image URL.
 * @returns {JSX.Element} - Returns the JSX element for the ArticleCover component.
 */
const ArticleCover = ({ coverImage, setCoverImage }) => {
  const [preview, setPreview] = useState(coverImage !== "" ? coverImage : "");
  const fileInputRef = useRef();

  /**
   * Handles changes to the uploaded image.
   * @param {Object} e - The event object generated by the input field.
   */
  const handleImageChange = (e) => {
    const file = e.target.files[0];
    if (file) {
      const reader = new FileReader();
      reader.onloadend = () => {
        setPreview(reader.result);
        setCoverImage(reader.result);
      };
      reader.readAsDataURL(file);
    }
  };

  /**
   * Handles click on the image preview.
   */
  const handlePreviewClick = () => {
    fileInputRef.current.click();
  };

  return (
    <>
      <h3>Tree Cover Image</h3>
      <div className="image-input-container">
        {/* If there is a preview image, display it */}
        {preview ? (
          <img
            src={preview}
            alt="Preview"
            className="image-preview"
            onClick={handlePreviewClick}
          />
        ) : (
          // If no preview image, display upload button
          <label className="image-upload-label" onClick={handlePreviewClick}>
            <FontAwesomeIcon icon={faUpload} className="fa-upload-icon" />
            <div className="upload-label-text">Upload Image</div>
          </label>
        )}
        {/* Input field for uploading image */}
        <input
          type="file"
          accept="image/*"
          onChange={handleImageChange}
          style={{ display: "none" }}
          ref={fileInputRef}
        />
      </div>
    </>
  );
};

export default ArticleCover;
